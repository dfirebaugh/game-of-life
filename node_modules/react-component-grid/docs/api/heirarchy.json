{
    "component": {
        "heading": "Components",
        "doclets": [
            {
                "meta": {
                    "range": [
                        1851,
                        2973
                    ],
                    "filename": "Cell.jsx",
                    "lineno": 47,
                    "path": "/mnt/c/Users/Damienn/Documents/make/web/react-component-grid/src",
                    "code": {
                        "id": "astnode100000135",
                        "name": "Cell",
                        "type": "FunctionDeclaration",
                        "paramnames": [
                            "props"
                        ]
                    },
                    "vars": {
                        "className": "Cell~className",
                        "width": "Cell~width",
                        "height": "Cell~height",
                        "additionalProps": "Cell~additionalProps",
                        "data": "Cell~data",
                        "style": "Cell~style",
                        "isHovered": "Cell~isHovered",
                        "cols": "Cell~cols",
                        "x": "Cell~x",
                        "y": "Cell~y",
                        "rows": "Cell~rows",
                        "hover": "Cell~hover",
                        "Component": "Cell~Component"
                    }
                },
                "params": [],
                "longname": "Cell",
                "name": "Cell",
                "doclets": [],
                "childprops": [
                    {
                        "type": {
                            "names": [
                                "*"
                            ]
                        },
                        "description": "The data for this cell from `Grid`s `data` prop.",
                        "name": "data"
                    },
                    {
                        "type": {
                            "names": [
                                "number"
                            ]
                        },
                        "description": "The width of the cell, in pixels.",
                        "name": "width"
                    },
                    {
                        "type": {
                            "names": [
                                "number"
                            ]
                        },
                        "description": "The height of the cell, in pixels.",
                        "name": "height"
                    },
                    {
                        "type": {
                            "names": [
                                "number"
                            ]
                        },
                        "description": "The x index of this cell.",
                        "name": "x"
                    },
                    {
                        "type": {
                            "names": [
                                "number"
                            ]
                        },
                        "description": "The y index of this cell.",
                        "name": "y"
                    },
                    {
                        "type": {
                            "names": [
                                "boolean"
                            ]
                        },
                        "description": "Is true if the cell is on the top row.",
                        "name": "top"
                    },
                    {
                        "type": {
                            "names": [
                                "boolean"
                            ]
                        },
                        "description": "Is true if the cell is on the bottom row.",
                        "name": "bottom"
                    },
                    {
                        "type": {
                            "names": [
                                "boolean"
                            ]
                        },
                        "description": "Is true if the cell is on the left-most column.",
                        "name": "left"
                    },
                    {
                        "type": {
                            "names": [
                                "boolean"
                            ]
                        },
                        "description": "Is true if the cell is on the right-most column.",
                        "name": "right"
                    },
                    {
                        "type": {
                            "names": [
                                "boolean"
                            ]
                        },
                        "description": "Is true if the cursor is currently hovering over this cell.",
                        "name": "hover"
                    },
                    {
                        "type": {
                            "names": [
                                "number",
                                "null"
                            ]
                        },
                        "description": "The index of the hit area that is currently being hovered, or `null` if the cursor is not hovering over this cell.",
                        "name": "hoverHitArea"
                    }
                ],
                "scope": "global",
                "kind": "component",
                "___s": true,
                "___id": "T000002R000013",
                "description": "<p><code>Cell</code>s are created by <code>Grid</code>s. They each have a single child, a clone of the component passed to the <code>component</code> prop of <code>Grid</code>.\n<code>Cell</code>s are responsible for x / y positioning, and passing cell-specific props down to your cell components.</p>",
                "comment": "/**\n * @component\n *\n * `Cell`s are created by `Grid`s. They each have a single child, a clone of the component passed to the `component` prop of `Grid`.\n * `Cell`s are responsible for x / y positioning, and passing cell-specific props down to your cell components.\n *\n * @childprop {*} data The data for this cell from `Grid`s `data` prop.\n * @childprop {number} width The width of the cell, in pixels.\n * @childprop {number} height The height of the cell, in pixels.\n * @childprop {number} x The x index of this cell.\n * @childprop {number} y The y index of this cell.\n * @childprop {boolean} top Is true if the cell is on the top row.\n * @childprop {boolean} bottom Is true if the cell is on the bottom row.\n * @childprop {boolean} left Is true if the cell is on the left-most column.\n * @childprop {boolean} right Is true if the cell is on the right-most column.\n * @childprop {boolean} hover Is true if the cursor is currently hovering over this cell.\n * @childprop {number|null} hoverHitArea The index of the hit area that is currently being hovered, or `null` if the cursor is not hovering over this cell.\n */"
            },
            {
                "meta": {
                    "range": [
                        3845,
                        10869
                    ],
                    "filename": "Grid.jsx",
                    "lineno": 66,
                    "path": "/mnt/c/Users/Damienn/Documents/make/web/react-component-grid/src",
                    "code": {
                        "id": "astnode100000914",
                        "name": "Grid",
                        "type": "CallExpression",
                        "value": ""
                    }
                },
                "longname": "Grid",
                "examples": [
                    "function Square(props) {\n  return <div className=\"Square\">{props.data}</div>;\n}\n\nfunction TicTacToe(props) {\n  const data = [\n      [\"X\",\" \",\" \"],\n      [\"O\",\"O\",\" \"],\n      [\" \",\"X\",\" \"]\n  ];\n  return <Grid\n      component={Square}\n      data={data}\n      size={40}\n  />;\n}"
                ],
                "name": "Grid",
                "doclets": [],
                "properties": [
                    {
                        "type": {
                            "names": [
                                "Component"
                            ]
                        },
                        "name": "component",
                        "description": "<p>A React Component to use within each cell in the grid. Note that it must be a React <code>Component</code>, not a React <code>Element</code>.</p>"
                    },
                    {
                        "optional": true,
                        "type": {
                            "names": [
                                "Array.<Array>"
                            ]
                        },
                        "name": "data",
                        "description": "<p>A 2D array containing data to pass to each cell via their <code>data</code> prop</p>",
                        "defaultvalue": "null"
                    },
                    {
                        "optional": true,
                        "type": {
                            "names": [
                                "number"
                            ]
                        },
                        "name": "cols",
                        "description": "<p>Number of colums to render. If not set this will be automatically determined from <code>data</code>.</p>"
                    },
                    {
                        "optional": true,
                        "type": {
                            "names": [
                                "number"
                            ]
                        },
                        "name": "rows",
                        "description": "<p>Number of rows to render. If not set this will be automatically determined from <code>data</code>.</p>"
                    },
                    {
                        "type": {
                            "names": [
                                "number",
                                "Object"
                            ]
                        },
                        "name": "size",
                        "description": "<p>Sets the pixel size of cells. Pass a number to set <code>width</code> and <code>height</code> at once, or pass an object with <code>x</code> and <code>y</code> values to set <code>width</code> and <code>height</code> separately.</p>",
                        "defaultvalue": "50"
                    },
                    {
                        "optional": true,
                        "type": {
                            "names": [
                                "OnCellClick"
                            ],
                            "typedefs": {
                                "OnCellClick": {
                                    "meta": {
                                        "range": [
                                            13085,
                                            13418
                                        ],
                                        "filename": "Grid.jsx",
                                        "lineno": 300,
                                        "path": "/mnt/c/Users/Damienn/Documents/make/web/react-component-grid/src",
                                        "code": {}
                                    },
                                    "params": [
                                        {
                                            "type": {
                                                "names": [
                                                    "Number"
                                                ]
                                            },
                                            "description": "<p>The x coordinate of the clicked cell.</p>",
                                            "name": "x"
                                        },
                                        {
                                            "type": {
                                                "names": [
                                                    "Number"
                                                ]
                                            },
                                            "description": "<p>The y coordinate of the clicked cell.</p>",
                                            "name": "y"
                                        },
                                        {
                                            "type": {
                                                "names": [
                                                    "Number"
                                                ]
                                            },
                                            "description": "<p>The number of the hit area shape that was hit. This will be 0 unless multiple hit areas are defined.</p>",
                                            "name": "hitArea"
                                        }
                                    ],
                                    "longname": "OnCellClick",
                                    "name": "OnCellClick",
                                    "scope": "global",
                                    "kind": "typedef",
                                    "___s": true,
                                    "___id": "T000002R000232",
                                    "description": "<p>A callback that is called when a cell is clicked.</p>",
                                    "comment": "/**\n * A callback that is called when a cell is clicked.\n *\n * @typedef OnCellClick\n * @param {Number} x The x coordinate of the clicked cell.\n * @param {Number} y The y coordinate of the clicked cell.\n * @param {Number} hitArea The number of the hit area shape that was hit. This will be 0 unless multiple hit areas are defined.\n */"
                                }
                            }
                        },
                        "name": "onCellClick",
                        "description": "<p></p>",
                        "typedefOptions": [
                            {
                                "meta": {
                                    "range": [
                                        13085,
                                        13418
                                    ],
                                    "filename": "Grid.jsx",
                                    "lineno": 300,
                                    "path": "/mnt/c/Users/Damienn/Documents/make/web/react-component-grid/src",
                                    "code": {}
                                },
                                "params": [
                                    {
                                        "type": {
                                            "names": [
                                                "Number"
                                            ]
                                        },
                                        "description": "<p>The x coordinate of the clicked cell.</p>",
                                        "name": "x"
                                    },
                                    {
                                        "type": {
                                            "names": [
                                                "Number"
                                            ]
                                        },
                                        "description": "<p>The y coordinate of the clicked cell.</p>",
                                        "name": "y"
                                    },
                                    {
                                        "type": {
                                            "names": [
                                                "Number"
                                            ]
                                        },
                                        "description": "<p>The number of the hit area shape that was hit. This will be 0 unless multiple hit areas are defined.</p>",
                                        "name": "hitArea"
                                    }
                                ],
                                "longname": "OnCellClick",
                                "name": "OnCellClick",
                                "scope": "global",
                                "kind": "typedef",
                                "___s": true,
                                "___id": "T000002R000232",
                                "description": "<p>A callback that is called when a cell is clicked.</p>",
                                "comment": "/**\n * A callback that is called when a cell is clicked.\n *\n * @typedef OnCellClick\n * @param {Number} x The x coordinate of the clicked cell.\n * @param {Number} y The y coordinate of the clicked cell.\n * @param {Number} hitArea The number of the hit area shape that was hit. This will be 0 unless multiple hit areas are defined.\n */"
                            }
                        ]
                    },
                    {
                        "optional": true,
                        "type": {
                            "names": [
                                "boolean"
                            ]
                        },
                        "name": "allowHover",
                        "description": "<p>Set allowHover to true to allow computation of hover states on cells and their hit areas, and pass a <code>hover</code> boolean to each cell component.</p>",
                        "defaultvalue": "false"
                    },
                    {
                        "optional": true,
                        "type": {
                            "names": [
                                "Array"
                            ]
                        },
                        "name": "cellHitArea",
                        "description": "<p>An array of points used to define the shape of the hit area on each cell. Defaults to <code>[[0,0],[1,0],[1,1],[0,1]]</code> which makes the entire surface of each cell is clickable.</p>",
                        "defaultvalue": "[\"[0,0]\",\"[1,0]\",\"[1,1]\",\"[0,1]\"]"
                    },
                    {
                        "optional": true,
                        "type": {
                            "names": [
                                "Array"
                            ]
                        },
                        "name": "cellHitAreas",
                        "description": "<p>An array of arrays of points used to define several hit area shapes on each cell. This prop takes precedence over <code>cellHitArea</code>.</p>"
                    },
                    {
                        "optional": true,
                        "type": {
                            "names": [
                                "string"
                            ]
                        },
                        "name": "className",
                        "description": "<p>Class names to apply to the <code>Grid</code>s DOM element</p>",
                        "defaultvalue": "\"\""
                    },
                    {
                        "optional": true,
                        "type": {
                            "names": [
                                "string"
                            ]
                        },
                        "name": "cellClassName",
                        "description": "<p>Class names to apply to every cell</p>",
                        "defaultvalue": "\"\""
                    }
                ],
                "scope": "global",
                "kind": "component",
                "___s": true,
                "___id": "T000002R000106",
                "description": "<p>A grid of cells. This will create a 2D matrix of <code>Cell</code>s according to the <code>Grid</code>s props.\nInside each <code>Cell</code> an element of type <code>props.component</code> is created.</p>\n<p>Cell components are positioned in the grid more like sprites than DOM elements,\nmeaning that the size of the contents of cells will have no bearing on the placement of adjacent cells.\nThe cell <code>component</code>s themselves can be styled as normal.</p>",
                "comment": "/**\n * @component\n *\n * A grid of cells. This will create a 2D matrix of `Cell`s according to the `Grid`s props.\n * Inside each `Cell` an element of type `props.component` is created.\n *\n * Cell components are positioned in the grid more like sprites than DOM elements,\n * meaning that the size of the contents of cells will have no bearing on the placement of adjacent cells.\n * The cell `component`s themselves can be styled as normal.\n *\n * @example\n * function Square(props) {\n *   return <div className=\"Square\">{props.data}</div>;\n * }\n *\n * function TicTacToe(props) {\n *   const data = [\n *       [\"X\",\" \",\" \"],\n *       [\"O\",\"O\",\" \"],\n *       [\" \",\"X\",\" \"]\n *   ];\n *   return <Grid\n *       component={Square}\n *       data={data}\n *       size={40}\n *   />;\n * }\n */"
            }
        ]
    }
}